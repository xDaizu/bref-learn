app: skeleton
service: skeleton-cloudfront-build
useDotenv: true

provider:
  name: aws
  stage: ${env:APP_ENV}
  region: eu-west-2
  runtime: provided.al2

resources:
  Resources:
    Cloudfront:
      Type: AWS::CloudFront::Distribution
      Properties:
        DistributionConfig:
#          Aliases:
#            - !If [ IsProductionCloudfront, '${env:APP_NAME}.${env:BASE_DOMAIN}', '${env:APP_NAME}.${env:APP_ENV}.${env:BASE_DOMAIN}' ]
#          DefaultCacheBehavior:
#            AllowedMethods:
#              - 'POST'
#              - 'HEAD'
#              - 'PATCH'
#              - 'DELETE'
#              - 'PUT'
#              - 'GET'
#              - 'OPTIONS'
#            CachePolicyId: ${cf:${env:APP_NAME}-common.BackendCachePolicyId}
#            Compress: true
#            OriginRequestPolicyId: ${cf:${env:APP_NAME}-common.OriginRequestPolicyId}
#            SmoothStreaming: false
#            TargetOriginId: 'lambda'
#            ViewerProtocolPolicy: 'redirect-to-https'
          DefaultCacheBehavior:
            - AllowedMethods:
                - 'HEAD'
                - 'GET'
              CachePolicyId: '658327ea-f89d-4fab-a63d-7e88639e58f6' #Managed-CachingOptimized
              Compress: true
              PathPattern: '*'
              SmoothStreaming: false
              TargetOriginId: 'frontend'
              ViewerProtocolPolicy: 'redirect-to-https'
          Comment: '${env:APP_NAME} ${env:APP_ENV}'
          Enabled: true
          HttpVersion: http2and3
          IPV6Enabled: true
          Logging:
            Bucket: !Join [".",['${cf:skeleton-api-dev.ServerlessDeploymentBucketName}',s3.amazonaws.com]]
            IncludeCookies: false
          Origins:
#            - Id: lambda
#              ConnectionAttempts: 3
#              ConnectionTimeout: 10
#              CustomOriginConfig:
#                HTTPSPort: 443
#                OriginKeepaliveTimeout: 5
#                OriginProtocolPolicy: 'https-only'
#                OriginReadTimeout: 60
#                OriginSSLProtocols:
#                  - 'TLSv1.2'
#              DomainName: !Select [2, !Split ["/", '${cf:${env:APP_NAME}-${env:APP_ENV}.ApiLambdaFunctionUrl}']]
#              OriginCustomHeaders:
#                - HeaderName: X-Forwarded-Host
#                  HeaderValue: ${env:FORWARDED_HOST}
            - Id: frontend
              S3OriginConfig: {}
              DomainName: '${cf:skeleton-s3-build-dev.FrontendBucketDomain}'
          PriceClass: 'PriceClass_All'